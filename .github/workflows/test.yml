on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: run tests

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run linters
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.46.2

  test:
    strategy:
      matrix:
        go-version: [ 1.14.x ]
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: go test -v -covermode=count

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Calculate coverage
        run: |
          go test -v -covermode=atomic -coverprofile=coverage.txt
      - name: Upload coverage report
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.CODECOV_ACCESS_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
